@model Entity.Venta

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Venta</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CVenta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CVenta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CVenta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CLocal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CLocal.CLocal, new SelectList(ViewBag.local, "CLocal", "CLocal"), "---Select---", "")
                @Html.ValidationMessageFor(model => model.CLocal.CLocal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MCostoVenta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MCostoVenta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MCostoVenta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DFechaVenta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DFechaVenta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DFechaVenta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QDescuento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QDescuento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QDescuento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IGV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IGV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IGV, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CMotorizado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CMotorizado.CEmpleado,
                                    new SelectList(ViewBag.motorizado, "CEmpleado", "NEmpleado"), "---Select---", "")
                @Html.ValidationMessageFor(model => model.CMotorizado.NEmpleado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CCliente.CCliente,
                                    new SelectList(ViewBag.cliente, "CCliente", "NCliente"), "---Select---", "")
                @Html.ValidationMessageFor(model => model.CCliente.NCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DHoraEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DHoraEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DHoraEntrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TReferencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TReferencia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TReferencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
